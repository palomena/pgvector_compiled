name: Compile pgvector

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight UTC
  push:
    paths:
      - ".github/workflows/compile.yml"
  pull_request:
    paths:
      - ".github/workflows/compile.yml"
  workflow_dispatch:

env:
  PGVECTOR_REPO: "pgvector/pgvector"

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.check_release.outputs.new_version }}
      version: ${{ steps.check_release.outputs.version }}
    steps:
      - name: Check for new release
        id: check_release
        run: |
          latest_tag=$(curl -s "https://api.github.com/repos/${{ env.PGVECTOR_REPO }}/tags" | jq -r '.[0].name')
          echo "Latest tag: ${latest_tag#v}"
          latest_version=${latest_tag#v}
          echo "version=$latest_version" >> $GITHUB_OUTPUT

          # Get the current version from the latest release of this repo
          current_version=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.body' | grep -oP 'pgvector v\K[0-9.]+')
          echo "Current version: $current_version"

          if [[ "$latest_version" != "$current_version" ]]; then
            echo "new_version=true" >> $GITHUB_OUTPUT
          else
            echo "new_version=false" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            triple: x86_64-unknown-linux-gnu
          - os: macos-latest
            triple: aarch64-apple-darwin
          - os: windows-latest
            triple: x86_64-pc-windows-msvc

    steps:
      - name: Set up PostgreSQL and pgvector (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-common
          sudo DEBIAN_FRONTEND=noninteractive /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-17 postgresql-server-dev-17
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-17-pgvector

      - name: Set up PostgreSQL (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install postgresql@17
          echo "/usr/local/opt/postgresql@17/bin" >> $GITHUB_PATH

      - name: Set up PostgreSQL (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          choco install postgresql17 --params '/Password:postgres'
          echo "C:\Program Files\PostgreSQL\17\bin" >> $GITHUB_PATH
          echo "C:\Program Files\PostgreSQL\17" >> $GITHUB_PATH

      - name: Clone pgvector (macOS and Windows)
        if: runner.os != 'Linux'
        uses: actions/checkout@v3
        with:
          repository: ${{ env.PGVECTOR_REPO }}
          ref: v${{ needs.check_version.outputs.version }}

      - name: Compile pgvector (macOS)
        if: runner.os == 'macOS'
        run: |
          export PG_CONFIG="$(brew --prefix postgresql@17)/bin/pg_config"
          make
          sudo --preserve-env=PG_CONFIG make install

      - name: Set up Visual Studio and compile pgvector (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set "PGROOT=C:\Program Files\PostgreSQL\17"
          nmake /F Makefile.win
          nmake /F Makefile.win install

      - name: Create artifact (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p pgvector-${{ matrix.triple }}-pg17/include/server/extension/vector
          mkdir -p pgvector-${{ matrix.triple }}-pg17/lib/bitcode/vector/src
          mkdir -p pgvector-${{ matrix.triple }}-pg17/share/extension

          # Copy header files
          sudo cp /usr/include/postgresql/17/server/extension/vector/*.h pgvector-${{ matrix.triple }}-pg17/include/server/extension/vector/

          # Copy bitcode files
          sudo cp /usr/lib/postgresql/17/lib/bitcode/vector.index.bc pgvector-${{ matrix.triple }}-pg17/lib/bitcode/
          sudo cp /usr/lib/postgresql/17/lib/bitcode/vector/src/*.bc pgvector-${{ matrix.triple }}-pg17/lib/bitcode/vector/src/

          # Copy shared object file
          sudo cp /usr/lib/postgresql/17/lib/vector.so pgvector-${{ matrix.triple }}-pg17/lib/

          # Copy extension files
          sudo cp /usr/share/postgresql/17/extension/vector*.sql pgvector-${{ matrix.triple }}-pg17/share/extension/
          sudo cp /usr/share/postgresql/17/extension/vector.control pgvector-${{ matrix.triple }}-pg17/share/extension/

          # Create zip archive
          zip -r pgvector-${{ matrix.triple }}-pg17.zip pgvector-${{ matrix.triple }}-pg17

          # Create tar.gz archive
          tar -czvf pgvector-${{ matrix.triple }}-pg17.tar.gz pgvector-${{ matrix.triple }}-pg17

      - name: Create artifact (macOS)
        if: runner.os == 'macOS'
        run: |
          # Create directory structure
          mkdir -p pgvector-${{ matrix.triple }}-pg17/lib
          mkdir -p pgvector-${{ matrix.triple }}-pg17/share/extension
          mkdir -p pgvector-${{ matrix.triple }}-pg17/include/server/extension/vector

          # Copy shared library
          cp $(brew --prefix postgresql@17)/lib/postgresql/vector.dylib pgvector-${{ matrix.triple }}-pg17/lib/

          # Copy extension files
          cp $(brew --prefix postgresql@17)/share/postgresql@17/extension/vector*.sql pgvector-${{ matrix.triple }}-pg17/share/extension/
          cp $(brew --prefix postgresql@17)/share/postgresql@17/extension/vector.control pgvector-${{ matrix.triple }}-pg17/share/extension/

          # Copy header files
          cp $(brew --prefix postgresql@17)/include/postgresql/server/extension/vector/*.h pgvector-${{ matrix.triple }}-pg17/include/server/extension/vector/

          # Create a .so symlink for compatibility
          cp $(brew --prefix postgresql@17)/lib/postgresql/vector.dylib pgvector-${{ matrix.triple }}-pg17/lib/vector.so

          # Create zip archive
          zip -r pgvector-${{ matrix.triple }}-pg17.zip pgvector-${{ matrix.triple }}-pg17

          # Create tar.gz archive
          tar -czvf pgvector-${{ matrix.triple }}-pg17.tar.gz pgvector-${{ matrix.triple }}-pg17

      - name: Create artifact (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          REM Create directory structure
          mkdir pgvector-${{ matrix.triple }}-pg17\lib
          mkdir pgvector-${{ matrix.triple }}-pg17\share\extension
          mkdir pgvector-${{ matrix.triple }}-pg17\include\server\extension\vector

          REM Copy shared library
          copy "C:\Program Files\PostgreSQL\17\lib\vector.dll" pgvector-${{ matrix.triple }}-pg17\lib\

          REM Copy extension files
          copy "C:\Program Files\PostgreSQL\17\share\extension\vector*.sql" pgvector-${{ matrix.triple }}-pg17\share\extension\
          copy "C:\Program Files\PostgreSQL\17\share\extension\vector.control" pgvector-${{ matrix.triple }}-pg17\share\extension\

          REM Copy header files
          copy "C:\Program Files\PostgreSQL\17\include\server\extension\vector\halfvec.h" pgvector-${{ matrix.triple }}-pg17\include\server\extension\vector\
          copy "C:\Program Files\PostgreSQL\17\include\server\extension\vector\sparsevec.h" pgvector-${{ matrix.triple }}-pg17\include\server\extension\vector\
          copy "C:\Program Files\PostgreSQL\17\include\server\extension\vector\vector.h" pgvector-${{ matrix.triple }}-pg17\include\server\extension\vector\

          REM Create zip archive
          7z a -tzip pgvector-${{ matrix.triple }}-pg17.zip pgvector-${{ matrix.triple }}-pg17

          REM Create tar.gz archive
          7z a -ttar pgvector-${{ matrix.triple }}-pg17.tar pgvector-${{ matrix.triple }}-pg17
          7z a -tgzip pgvector-${{ matrix.triple }}-pg17.tar.gz pgvector-${{ matrix.triple }}-pg17.tar
          del pgvector-${{ matrix.triple }}-pg17.tar

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            pgvector-${{ matrix.triple }}-pg17.zip
            pgvector-${{ matrix.triple }}-pg17.tar.gz
          name: v0.17.${{ github.run_number }}
          tag_name: v0.17.${{ github.run_number }}
          body: |
            pgvector v${{ needs.check_version.outputs.version }} for PostgreSQL 17
